
package async.ws.notifier.service;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Notifier", targetNamespace = "http://service.notifier.ws.async/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Notifier {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "subscribe", targetNamespace = "http://service.notifier.ws.async/", className = "async.ws.notifier.service.Subscribe")
    @ResponseWrapper(localName = "subscribeResponse", targetNamespace = "http://service.notifier.ws.async/", className = "async.ws.notifier.service.SubscribeResponse")
    @Action(input = "http://service.notifier.ws.async/Notifier/subscribeRequest", output = "http://service.notifier.ws.async/Notifier/subscribeResponse")
    public void subscribe(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "notify", targetNamespace = "http://service.notifier.ws.async/", className = "async.ws.notifier.service.Notify")
    @Action(input = "http://service.notifier.ws.async/Notifier/notify")
    public void notify(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
